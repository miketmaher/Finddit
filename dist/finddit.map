{"version":3,"sources":["redditapi.js","index.js"],"names":["search","term","limit","sortBy","fetch","then","res","json","data","children","map","catch","console","log","err","searchForm","document","getElementById","seachInput","addEventListener","searchTerm","value","querySelector","showMessage","output","forEach","img","post","preview","images","source","url","title","truncateText","selftext","subreddit","score","innerHTML","e","preventDefault","msg","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","shortened","indexOf","substring"],"mappings":"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","file":"finddit.map","sourcesContent":["export default {\r\n  search: function(term, limit, sortBy) {\r\n    return fetch(`http://www.reddit.com/search.json?q=${term}&sort=${sortBy}&limit=${limit}`)\r\n      .then(res => res.json())\r\n      .then(data => data.data.children.map(data => data.data))\r\n      .catch(err => console.log(err));\r\n  }\r\n}","import reddit from './redditapi';\r\n\r\nconst searchForm = document.getElementById('search-form');\r\nconst seachInput = document.getElementById('search-input');\r\n\r\nsearchForm.addEventListener('submit', e => {\r\n  const searchTerm = seachInput.value;\r\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n  const limit = document.getElementById('limit').value;\r\n\r\n  //validation\r\n\r\n  if(searchTerm == '') {\r\n    showMessage('Please enter a search term', 'alert-danger');\r\n  }\r\n\r\n  seachInput.value = '';\r\n  reddit.search(searchTerm, limit, sortBy)\r\n    .then(res => {\r\n      let output = '<div class=\"card-columns\">';\r\n      res.forEach(post => {\r\n        const img = post.preview ? post.preview.images[0].source.url : 'https://botw-pd.s3.amazonaws.com/styles/logo-thumbnail/s3/012011/reddit-logo2.png?itok=Jy9FhN43'\r\n        output += `\r\n          <div class=\"card\">\r\n            <img class=\"card-img-top\" src=\"${img}\" alt=\"Card image cap\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">${post.title}</h5>\r\n              <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n              <a href=\"${post.url}\" class=\"btn btn-primary\">Read More</a>\r\n              <hr>\r\n              <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\r\n              <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n            </div>\r\n          </div>\r\n        `;\r\n      });\r\n      output += '</div>';\r\n      document.getElementById('results').innerHTML = output;\r\n    });\r\n\r\n  e.preventDefault();\r\n});\r\n\r\nfunction showMessage(msg, className) {\r\n  const div = document.createElement('div');\r\n  div.className = `alert ${className}`;\r\n  div.appendChild(document.createTextNode(msg));\r\n  const searchContainer = document.getElementById('search-container');\r\n  const search = document.getElementById('search');\r\n  searchContainer.insertBefore(div, search);\r\n  setTimeout(() => document.querySelector('.alert').remove(), 3000);\r\n}\r\n\r\nfunction truncateText(text, limit) {\r\n  const shortened = text.indexOf(' ', limit);\r\n  if (shortened == -1) {\r\n    return text;\r\n  }\r\n  return text.substring(0, shortened);\r\n}"]}